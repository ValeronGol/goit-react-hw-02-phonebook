{"version":3,"sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["Conteiner","styled","div","ConteinerForm","Button","button","Label","label","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","type","onSubmit","this","pattern","title","required","onChange","Component","ContactList","deleteId","Id","del","createList","contacts","map","contact","id","onClick","uuidv4","defaultProps","Filter","setFilterValue","toUpperCase","setFilterToState","App","filter","formSubmitHandler","data","repeatControl","con","includes","arrayCont","alert","elementDelete","arr","idContact","elem","deleteContactFromContactList","newArrAfterDel","filterData","filterArr","fArr","cont","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20cb0664.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nexport const Conteiner = styled.div`\n  padding: 20px 50px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const ConteinerForm = styled.div`\n  width: 300px;\n  padding: 20px;\n  display: block;\n  border: 1px solid #477405;\n`;\n\nexport const Button = styled.button`\n  margin: 5px 10px;\n  background-color: #0a0131ab;\n  color: white;\n  border-radius: 7px;\n  border-color: #0a0131ab;\n  &:hover {\n    background-color: white;\n    color: #0a0131ab;\n    border-color: #0a0131ab;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ConteinerForm, Label, Button } from './ContactForm.styled';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let contactForAdd = { name: this.state.name, number: this.state.number };\n    this.props.onSubmitData(contactForAdd);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <ConteinerForm>\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\n          <Label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </Label>\n          <Label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </Label>\n\n          <Button type=\"submit\">Add contact</Button>\n        </form>\n      </ConteinerForm>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactList extends Component {\n  deleteId = Id => {\n    this.props.del(Id);\n  };\n  createList = () => {\n    return this.props.contacts.map(contact => {\n      return (\n        <li key={uuidv4()} id={contact.id}>\n          {`${contact.name}: ${contact.number}`}\n          <button\n            data-id={contact.id}\n            onClick={() => this.deleteId(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n  };\n\n  render() {\n    return <ul>{this.createList()}</ul>;\n  }\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  del: PropTypes.func.isRequired,\n};\nContactList.defaultProps = {\n  contacts: [],\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    this.props.setFilterToState(value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Find contacts by name</h4>\n        <input onChange={this.setFilterValue}></input>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Conteiner } from './App.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    this.repeatControl(data);\n  };\n\n  repeatControl = data => {\n    let nameArray = [];\n    nameArray = this.state.contacts.map(con => con.name);\n    if (!nameArray.includes(data.name)) {\n      let arrayCont = [];\n      arrayCont = [\n        ...this.state.contacts,\n        { id: uuidv4(), name: data.name, number: data.number },\n      ];\n      return this.setState({ ...this.state, contacts: arrayCont });\n    } else {\n      alert(`${data.name} вже є у телефонній книзі!!!`);\n    }\n  };\n\n  elementDelete = (arr, idContact) => {\n    let newArr = arr.filter(elem => elem.id !== idContact);\n    return newArr;\n  };\n\n  deleteContactFromContactList = idContact => {\n    let newArrAfterDel = this.elementDelete(this.state.contacts, idContact);\n    this.setState({\n      ...this.state,\n      contacts: [...newArrAfterDel],\n    });\n  };\n\n  setFilterToState = filterData => {\n    this.setState({ ...this.state, filter: `${filterData}` });\n  };\n\n  filterArr = fArr => {\n    let newArr = fArr.filter(cont =>\n      cont.name.toUpperCase().includes(this.state.filter),\n    );\n    return newArr;\n  };\n\n  render() {\n    return (\n      <Conteiner>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter setFilterToState={this.setFilterToState} />\n        <ContactList\n          contacts={this.filterArr(this.state.contacts)}\n          del={this.deleteContactFromContactList}\n        />\n      </Conteiner>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}